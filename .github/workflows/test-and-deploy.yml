name: Test and Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # –ó–∞–ø—É—Å–∫ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è horse-booking
    - name: üöÄ Start Horse Booking Application
      run: |
        # –ó–∞–ø—É—Å–∫ horse-booking –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        docker compose up -d horse-booking-app
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–∞–π—Ç–∞
        echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ horse-booking –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'
        echo "‚úÖ Horse-booking –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ"
    
    # –°–±–æ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    - name: üî® Build Test Container
      run: |
        docker build -t test-runner -f Dockerfile.test .
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
    - name: üß™ Run Tests
      run: |
        mkdir -p allure-results allure-report
        # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —á–µ—Ä–µ–∑ docker compose
        docker compose --profile testing run --rm tests
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤ –∫–∞–∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
    - name: üìä Upload Allure Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞ Allure –æ—Ç—á–µ—Ç–∞
    - name: üìà Generate Allure Report
      if: always()
      run: |
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Allure
        wget https://github.com/allure-framework/allure2/releases/download/2.34.0/allure-2.34.0.zip
        unzip allure-2.34.0.zip
        sudo mv allure-2.34.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
          allure generate allure-results -o allure-report --clean
          echo "‚úÖ Allure –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω"
        else
          echo "‚ö†Ô∏è –ù–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞"
          mkdir -p allure-report
          echo "<h1>No test results found</h1>" > allure-report/index.html
        fi
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç—á–µ—Ç–∞ –¥–ª—è GitHub Pages
    - name: üì§ Upload Pages Artifact
      uses: actions/upload-pages-artifact@v3
      if: always()
      with:
        path: allure-report/
    
    # –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    - name: üßπ Cleanup
      if: always()
      run: |
        docker compose down --volumes --remove-orphans

  # –î–µ–ø–ª–æ–π –Ω–∞ GitHub Pages
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: üåê Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4